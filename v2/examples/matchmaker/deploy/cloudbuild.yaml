# To use this cloudbuild.yaml from it's directory:
#   gcloud builds submit --async --no-source \
#     --substitutions=COMMIT_SHA=<CONTAINER_IMAGE_TAG_TO_DEPLOY>
#
# Depending on how your project is set up, you may need to add the required Cloud Run role
# (https://cloud.google.com/run/docs/reference/iam/roles) to the cloud build
# service account using a gcloud command like this:
#   gcloud projects add-iam-policy-binding $(gcloud config get project) \ 
#     --member=serviceAccount:$(gcloud projects list --filter=$(gcloud config get project) --format="value(PROJECT_NUMBER)")-compute@developer.gserviceaccount.com \
#     --role=roles/run.developer
# You probably also need to allow Cloud Build to deploy using this application's custom Cloud Run _SERVICE_ACCOUNT:
#   gcloud iam service-accounts add-iam-policy-binding \
#     <_SERVICE_ACCOUNT>@$(gcloud config get project).iam.gserviceaccount.com \
#     --role=roles/iam.serviceAccountUser \
#     --member=serviceAccount:$(gcloud projects list --filter=$(gcloud config get project) --format="value(PROJECT_NUMBER)")-compute@developer.gserviceaccount.com

substitutions:
   # Cloud deploy vars
  _ARTIFACT_REGISTRY_URI: us-docker.pkg.dev/open-match-public-images/open-match2
  _JOB_NAME: matchmaker-example 
  _SERVICE_ACCOUNT: matchmaker-example-identity
  _RUN_REGION: us-central1

   # Application environment vars
  _OM_CORE_ADDR: OM_CORE_CLOUD_RUN_URL
  _SOLODUEL_ADDR: SOLODUEL_CLOUD_RUN_URL
  _SOLODUEL_PORT: "443"
  _LOGGING_LEVEL: info 
steps:
     
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: "Deploy:ingress public, all egress vpc"
    waitFor: ["-"]
    entrypoint: gcloud
    args:
      - run
      - deploy
      # service config
      - ${_JOB_NAME}
      - --no-allow-unauthenticated
      - --service-account
      - ${_SERVICE_ACCOUNT}
      - --region
      - ${_RUN_REGION}

      # Network config
      - --network
      - default
      - --subnet
      - default
      - --vpc-egress
      - all-traffic

      # ingress config
      - --ingress
      - all

      # container config
      - --image
      - '${_ARTIFACT_REGISTRY_URI}/${_JOB_NAME}:${COMMIT_SHA}'
      - --port
      - "8080"
      - --memory
      - 1024Mi

      # env vars
      - --update-env-vars
      - "OM_CORE_ADDR=${_OM_CORE_ADDR}"
      - --update-env-vars
      - "SOLODUEL_ADDR=${_SOLODUEL_ADDR}"
      - --update-env-vars
      - "SOLODUEL_PORT=${_SOLODUEL_PORT}"
      - --update-env-vars
      - "LOGGING_LEVEL=${_LOGGING_LEVEL}"
